AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  DynamoDBEndpoint:
    Type: String
    Description: Optionally override the DynamoDB endpoint URL
  StrideCredentials:
    Type: String
    Description: the api key and secret for the Stride API
    NoEcho: true
  MediaCredentials:
    Type: String
    Description: the api key and secret for the Media API
    NoEcho: true
  UserCredentials:
    Type: String
    Description: the api key and secret for the User API
    NoEcho: true
  DarkSkyKey:
    Type: String
    Description: API key for Dark Sky API
    NoEcho: true
  GoogleGeocodingKey:
    Type: String
    Description: Google Maps Geocoding API Key
    NoEcho: true
  AppClassName:
    Type: String
    Description: The fully qualified name of the app descriptor for this App

Resources:
  BotTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: bot-invocation-topic

  ApiGateway:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: production
      DefinitionBody:
        swagger: 2.0
        info:
          title:
            Ref: AWS::StackName
        x-amazon-apigateway-binary-media-types:
          - 'image/*'
        paths:
          /static/{item}:
            get:
              produces:
                - application/json
              parameters:
                - name: item
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    content-type:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              x-amazon-apigateway-integration:
                credentials: !GetAtt S3ProxyRole.Arn
                httpMethod: GET
                passthroughBehavior: when_no_match
                type: aws
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:s3:path/${StaticContentBucket}/{object}
                responses:
                  '4\d{2}':
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.content-type: integration.response.header.content-type
                      method.response.header.Content-Type: integration.response.header.Content-Type
                  '5\d{2}':
                    statusCode: '500'
                requestParameters:
                  integration.request.path.object: method.request.path.item
          /api/{path}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpLambdaFunction.Arn}/invocations
              responses: {}
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HttpLambdaFunction.Arn}/invocations
              responses: {}

  HttpLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.kablambda.aws.handler.HttpLambdaHandler
      CodeUri: ./target/lambda-stride-bot-1.0.jar
      Runtime: java8
      Timeout: 60
      MemorySize: 1024
      Policies:
       - AWSLambdaExecute
       - AmazonDynamoDBFullAccess
       - AmazonSNSFullAccess
      Events:
        Request:
          Type: Api
          Properties:
            Path: /{path+}
            Method: any
      Environment:
        Variables:
          STRIDE_CREDENTIALS: !Ref StrideCredentials
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpoint
          BOT_TOPIC_ARN: !Ref BotTopic
          APP_CLASS_NAME: !Ref AppClassName
          TABLE_NAME: !Ref StrideBotTable
          STAGE_NAME: production

  SnsLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: org.kablambda.aws.handler.SNSLambdaHandler
      CodeUri: ./target/lambda-stride-bot-1.0.jar
      Runtime: java8
      Timeout: 60
      MemorySize: 1024
      Policies:
       - AWSLambdaExecute
       - AmazonDynamoDBFullAccess
       - AmazonSNSFullAccess
      Events:
        Request:
          Type: SNS
          Properties:
            Topic: !Ref BotTopic
      Environment:
        Variables:
          STRIDE_CREDENTIALS: !Ref StrideCredentials
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpoint
          # I don't think BASE_URL is used
          BASE_URL: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/production
          DARK_SKY_KEY: !Ref DarkSkyKey
          GOOGLE_GEOCODING_KEY: !Ref GoogleGeocodingKey
          APP_CLASS_NAME: !Ref AppClassName
          TABLE_NAME: !Ref StrideBotTable

  ConfigLambdaPermission:
    Type: "AWS::Lambda::Permission"
    DependsOn:
    - ApiGateway
    - HttpLambdaFunction
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref HttpLambdaFunction
      Principal: apigateway.amazonaws.com

  StrideBotTable:
       Type: AWS::Serverless::SimpleTable
       Properties:
         PrimaryKey:
           Name: cloudId
           Type: String
         ProvisionedThroughput:
           ReadCapacityUnits: 5
           WriteCapacityUnits: 5
  StaticContentBucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead

  S3ProxyRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          -
            Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              Service:
                - "apigateway.amazonaws.com"
Outputs:
  BotApplicationDescriptorUrl:
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/production/api/app-descriptor.json
    Description: Descriptor URL of Bot for installation
  BotTableName:
    Value: !Ref StrideBotTable
  StaticContentBucketRef:
    Value: !Ref StaticContentBucket
